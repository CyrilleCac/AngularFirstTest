'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _promise = require('babel-runtime/core-js/promise');

var _promise2 = _interopRequireDefault(_promise);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _child_process = require('child_process');

var _semver = require('semver');

var _semver2 = _interopRequireDefault(_semver);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee() {
  var git, node;
  return _regenerator2.default.wrap(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          git = new _promise2.default(function (resolve, reject) {
            (0, _child_process.exec)('git --version', function (err) {
              if (err) {
                reject('Git instalation not detected');
              }
              resolve(true);
            });
          });
          node = new _promise2.default(function (resolve, reject) {
            if (_semver2.default.gt(process.versions.node, '4.0.0')) {
              resolve();
            } else {
              reject('unsuported node vesion');
            }
          });
          return _context.abrupt('return', _promise2.default.all([git, node]));

        case 3:
        case 'end':
          return _context.stop();
      }
    }
  }, _callee, undefined);
}));