'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _promise = require('babel-runtime/core-js/promise');

var _promise2 = _interopRequireDefault(_promise);

exports.default = function (script) {
  var globalFlag = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

  if (globalFlag) {
    gotElectron(require('electron'), script);
  } else {
    return resolvePkg('electron', { basedir: process.cwd() }).then(function (localElectron) {
      return require(localElectron);
    }).then(function (electron) {
      gotElectron(electron, script);
    });
  }
};

var _denodeify = require('denodeify');

var _denodeify2 = _interopRequireDefault(_denodeify);

var _child_process = require('child_process');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var resolvePkg = (0, _denodeify2.default)(require('resolve'));

var gotElectron = function gotElectron(pathToElectron, script) {
  return new _promise2.default(function (resolve, reject) {
    var proc = (0, _child_process.spawn)(pathToElectron, ['.'], { cwd: process.cwd() });

    proc.stdout.on('data', function (data) {
      console.log(data.toString());
    });

    proc.stdout.on('data', function (data) {
      console.error(data.toString());
    });

    proc.on('close', function () {
      resolve();
    });
  });
};